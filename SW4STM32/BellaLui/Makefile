# A Makefile for fusing Google Test and building a sample test against it.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make check  - makes everything and runs the built sample test.
#   make clean  - removes all files generated by make.

# Points to the root of fused Google Test, relative to where this file is.
GOOGLETEST_DIR = ../../Test/googletest/googletest
FUSED_GTEST_DIR = $(GOOGLETEST_DIR)/fused_gtest

# Paths to the fused gtest files.
FUSED_GTEST_H = $(FUSED_GTEST_DIR)/gtest/gtest.h
FUSED_GTEST_ALL_CC = $(FUSED_GTEST_DIR)/gtest/gtest-all.cc

# Where to find the tests.
INC_DIR = ./Application/HostBoard/Inc
SRC_DIR = ./Application/HostBoard/Src
BIN_DIR= ./bin

SENSORS_INC_DIR = $(INC_DIR)/Sensors
SENSORS_SRC_DIR = $(SRC_DIR)/Sensors
SENSORS_TESTS_DIR = $(SENSORS_SRC_DIR)/Test

MISC_INC_DIR = $(INC_DIR)/misc
MISC_SRC_DIR = $(SRC_DIR)/misc
MISC_TESTS_DIR = $(MISC_SRC_DIR)/Test

# Where to find gtest_main.cc.
GTEST_MAIN_CC = $(GOOGLETEST_DIR)/src/gtest_main.cc

# Flags passed to the preprocessor.
# We have no idea here whether pthreads is available in the system, so
# disable its use.
CPPFLAGS += -I$(FUSED_GTEST_DIR) -I$(INC_DIR) -DGTEST_HAS_PTHREAD=0 -DTESTING

# Flags passed to the C++ compiler.
CXX = g++
CXXFLAGS += -g -std=c++1y

all : $(BIN_DIR)/sensor_tests
	$(BIN_DIR)/state_machine_tests

check : all
	./$(BIN_DIR)/sensor_tests \
	./$(BIN_DIR)/state_machine_tests

fuse_gtest : $(GOOGLETEST_DIR)/scripts/fuse_gtest_files.py
	python3 $(GOOGLETEST_DIR)/scripts/fuse_gtest_files.py $(FUSED_GTEST_DIR)

clean :
	rm -rf $(FUSED_GTEST_DIR) $(BIN_DIR)/* *.o

$(FUSED_GTEST_H) :
	../fuse_gtest_files.py $(FUSED_GTEST_DIR)

$(FUSED_GTEST_ALL_CC) :
	../fuse_gtest_files.py $(FUSED_GTEST_DIR)

gtest-all.o : $(FUSED_GTEST_H) $(FUSED_GTEST_ALL_CC)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(FUSED_GTEST_DIR)/gtest/gtest-all.cc

gtest_main.o : $(FUSED_GTEST_H) $(GTEST_MAIN_CC)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(GTEST_MAIN_CC)

UnbiasedIMU.o : $(SENSORS_SRC_DIR)/UnbiasedIMU.cpp $(SENSORS_INC_DIR)/UnbiasedIMU.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_SRC_DIR)/UnbiasedIMU.cpp
	
UnbiasedBarometer.o : $(SENSORS_SRC_DIR)/UnbiasedBarometer.cpp $(SENSORS_INC_DIR)/UnbiasedBarometer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_SRC_DIR)/UnbiasedBarometer.cpp

AltitudeEstimator.o : $(SENSORS_SRC_DIR)/AltitudeEstimator.cpp $(SENSORS_INC_DIR)/AltitudeEstimator.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_SRC_DIR)/AltitudeEstimator.cpp

MockBarometer.o : $(SENSORS_TESTS_DIR)/MockBarometer.cpp $(SENSORS_TESTS_DIR)/MockBarometer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_TESTS_DIR)/MockBarometer.cpp

MockIMU.o : $(SENSORS_TESTS_DIR)/MockIMU.cpp $(SENSORS_TESTS_DIR)/MockIMU.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_TESTS_DIR)/MockIMU.cpp

CSV.o : $(SENSORS_TESTS_DIR)/CSV.cpp $(SENSORS_TESTS_DIR)/CSV.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_TESTS_DIR)/CSV.cpp

AltitudeSimulator.o : $(SENSORS_TESTS_DIR)/AltitudeSimulator.cpp $(SENSORS_TESTS_DIR)/AltitudeSimulator.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_TESTS_DIR)/AltitudeSimulator.cpp

SensorTest.o : $(SENSORS_TESTS_DIR)/SensorTest.cpp \
                     $(SENSORS_INC_DIR)/UnbiasedIMU.h $(SENSORS_INC_DIR)/UnbiasedBarometer.h $(SENSORS_INC_DIR)/AltitudeEstimator.h $(FUSED_GTEST_H)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SENSORS_TESTS_DIR)/SensorTest.cpp

$(BIN_DIR)/sensor_tests : MockBarometer.o MockIMU.o UnbiasedIMU.o CSV.o UnbiasedBarometer.o AltitudeSimulator.o AltitudeEstimator.o SensorTest.o gtest-all.o gtest_main.o
	mkdir -p $(BIN_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@


state_machine_helpers.o : $(MISC_SRC_DIR)/state_machine_helpers.cpp $(MISC_INC_DIR)/state_machine_helpers.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(MISC_SRC_DIR)/state_machine_helpers.cpp

state_machine_tests.o : $(MISC_TESTS_DIR)/state_machine_tests.cpp \
                     $(MISC_INC_DIR)/state_machine_helpers.h $(FUSED_GTEST_H)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(MISC_TESTS_DIR)/state_machine_tests.cpp

$(BIN_DIR)/state_machine_tests : state_machine_helpers.o state_machine_tests.o gtest-all.o gtest_main.o
	mkdir -p $(BIN_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@